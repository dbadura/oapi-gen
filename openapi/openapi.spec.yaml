openapi: 3.0.0

info:
  title: Todo app OAS
  description: OpenApi specification for a todo application
  version: 1.0.0

servers:
  - url: http://localhost:32208/

paths:
  /test:
    $ref: '/types.yaml'
  /todos:
    post:
      description: Creates a new todo
      operationId: createTodo
      requestBody:
        description: Todo to add
        required: true
        content:
          application/json:
            schema:
              $ref: './types.yaml#/components/schemas/Todo'
      responses:
        '201':
          description: Todo creation response
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Error'
    get:
      description: Returns all the todo's of the user
      operationId: getTodos
      parameters:
        - name: user
          in: query
          description: ID of the user
          required: true
          schema:
            $ref: './types.yaml#/components/schemas/User'
#          schema:
#            type: string
#            format: uuid
        - name: status
          in: query
          description: filter todo's by status
          schema:
            $ref: './types.yaml#/components/schemas/Status'
      responses:
        '200':
          description: get todo's response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './types.yaml#/components/schemas/Todo'
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Error'

  /todos/{todoId}:
    put:
      description: Updates the status of a todo
      operationId: updateTodo
      parameters:
        - name: todoId
          in: path
          description: Id of the todo
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: status of the todo
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                task:
                  type: string
                status:
                  type: string
                  enum:
                    - on_hold
                    - working
                    - done
      responses:
        '200':
          description: "description"
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Todo'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Error'
    delete:
      description: delete a todo
      operationId: deleteTodo
      parameters:
        - name: todoId
          in: path
          description: Id of the todo
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: no content
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: './types.yaml#/components/schemas/Error'
